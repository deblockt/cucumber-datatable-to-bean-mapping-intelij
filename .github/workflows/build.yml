name: Publish artifact to the release

on:
  release:
    types: [ created ]

jobs:
  build-and-publish:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle
        run: ./gradlew buildPlugin

      - name: Get the latest release
        id: get_latest_release
        uses: actions/github-script@v7
        with:
          script: |
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            return latestRelease.data.id;
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact to latest release
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const artifactPath = 'build/distributions/cucumber-datatable-to-bean-mapping-intelij-plugin-1.0-SNAPSHOT.zip';
            const releaseId = ${{ steps.get_latest_release.outputs.result }};
            
            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId,
              name: 'cucumber-datatable-to-bean-mapping-intelij-plugin.zip',
              data: fs.readFileSync(artifactPath),
              headers: {
                'content-type': 'application/octet-stream',
                'content-length': fs.statSync(artifactPath).size,
              },
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}